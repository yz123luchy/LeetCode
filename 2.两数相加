C语言版：
struct ListNode* createNode(int val) {
    struct ListNode* newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
    newNode->val = val;
    newNode->next = NULL;
    return newNode;
}

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* dummyHead = createNode(0);  // 哨兵节点，方便处理
    struct ListNode* current = dummyHead;
    int carry = 0;  // 进位

    while (l1 != NULL || l2 != NULL) {
        int x = (l1 != NULL) ? l1->val : 0;
        int y = (l2 != NULL) ? l2->val : 0;
        int sum = carry + x + y;

        carry = sum / 10;  // 计算新的进位
        current->next = createNode(sum % 10);  // 计算当前节点的值
        current = current->next;  // 移动指针

        if (l1 != NULL) l1 = l1->next;
        if (l2 != NULL) l2 = l2->next;
    }

    // 如果最后还有进位，则加一个新节点
    if (carry > 0) {
        current->next = createNode(carry);
    }

    return dummyHead->next;  // 返回结果链表的头节点（跳过哨兵节点）
}

